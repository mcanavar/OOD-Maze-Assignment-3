#BlueJ class context
comment0.target=mazeCreation2
comment1.params=y\ x
comment1.target=mazeCreation2(int,\ int)
comment10.params=w
comment10.target=void\ setRandomDrawWall(Wall)
comment11.params=
comment11.target=java.util.HashSet\ findEdgeSquares()
comment12.params=edgeSquares
comment12.target=java.util.ArrayList\ endAndStartSquares(java.util.HashSet)
comment13.params=x\ y
comment13.target=java.util.ArrayList\ getDirections(int,\ int)
comment14.params=start\ end
comment14.target=java.util.ArrayList\ getPath(Square,\ Square)
comment15.params=
comment15.target=void\ determineIsPath()
comment16.params=
comment16.target=void\ determineDrawWalls()
comment2.params=y\ x
comment2.target=void\ setPos(int,\ int)
comment3.params=
comment3.target=java.lang.Integer[]\ startPoint()
comment4.params=
comment4.target=java.lang.Integer[]\ endPoint()
comment5.params=
comment5.target=int\ getMaxX()
comment6.params=
comment6.target=int\ getMaxY()
comment7.params=
comment7.target=void\ initMaze()
comment8.params=
comment8.target=void\ determineNeighbours()
comment9.params=
comment9.target=void\ createWalls()
comment9.text=\ This\ function\ creates\ and\ determines\ walls\r\n\ \ \ \ \ It\ works\ by\ looping\ through\ the\ Square\ array\r\n\ \ \ \ \ It\ assigns\ walls\ to\ the\ squares\ in\ the\ row\r\n\ \ \ \ \ If\ squares\ share\ walls,\ then\ it\ assigns\ a\ reference\ to\ that\ wall\ object\ to\ the\ square\r\n\ \ \ \ \ So,\ a\ square's\ left\ wall\ will\ be\ the\ previous\ square's\ right\ wall\r\nIt\ also\ marks\ walls\ on\ the\ border\ so\ they\ get\ drawn\ later
numComments=17
